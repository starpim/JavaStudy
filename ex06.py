{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### K평균\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hour</th>\n",
       "      <th>score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7.33</td>\n",
       "      <td>73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3.71</td>\n",
       "      <td>55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3.43</td>\n",
       "      <td>55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3.06</td>\n",
       "      <td>89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3.33</td>\n",
       "      <td>79</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   hour  score\n",
       "0  7.33     73\n",
       "1  3.71     55\n",
       "2  3.43     55\n",
       "3  3.06     89\n",
       "4  3.33     79"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('./data/KMeansData.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[  7.33,  73.  ],\n",
       "       [  3.71,  55.  ],\n",
       "       [  3.43,  55.  ],\n",
       "       [  3.06,  89.  ],\n",
       "       [  3.33,  79.  ],\n",
       "       [  7.22,  26.  ],\n",
       "       [  8.12,  15.  ],\n",
       "       [  5.74,  62.  ],\n",
       "       [  8.73,  59.  ],\n",
       "       [  4.73,  74.  ],\n",
       "       [  5.  ,  78.  ],\n",
       "       [  2.63,  46.  ],\n",
       "       [  7.02,   5.  ],\n",
       "       [  3.45,  38.  ],\n",
       "       [  3.06,  49.  ],\n",
       "       [  4.13,  66.  ],\n",
       "       [  9.17,  29.  ],\n",
       "       [  7.61,  74.  ],\n",
       "       [  0.94,  34.  ],\n",
       "       [  3.67,  71.  ],\n",
       "       [  8.47,   9.  ],\n",
       "       [  2.86,  67.  ],\n",
       "       [  1.9 ,  43.  ],\n",
       "       [  6.08,   0.  ],\n",
       "       [  8.42,  90.  ],\n",
       "       [  6.12,  77.  ],\n",
       "       [  0.  ,  47.  ],\n",
       "       [  2.16,  50.  ],\n",
       "       [  2.24,  38.  ],\n",
       "       [  2.31,  23.  ],\n",
       "       [  8.03,  31.  ],\n",
       "       [  9.02,   2.  ],\n",
       "       [  2.43,  20.  ],\n",
       "       [  4.5 ,  80.  ],\n",
       "       [  8.66,  70.  ],\n",
       "       [  7.95,  75.  ],\n",
       "       [  2.03,  26.  ],\n",
       "       [  5.43,  74.  ],\n",
       "       [  4.44,  78.  ],\n",
       "       [  3.17,  76.  ],\n",
       "       [  1.53,  42.  ],\n",
       "       [  7.85,  25.  ],\n",
       "       [  7.42,  85.  ],\n",
       "       [  2.14,  47.  ],\n",
       "       [  2.02,  36.  ],\n",
       "       [  9.43,  69.  ],\n",
       "       [  7.94,  22.  ],\n",
       "       [  1.83,  74.  ],\n",
       "       [  7.6 ,  23.  ],\n",
       "       [  6.41,  35.  ],\n",
       "       [  7.21,  94.  ],\n",
       "       [  2.53,  75.  ],\n",
       "       [  7.75,  16.  ],\n",
       "       [  8.08,  27.  ],\n",
       "       [  4.61,  62.  ],\n",
       "       [  4.04,  83.  ],\n",
       "       [  4.25,  61.  ],\n",
       "       [  2.44,  96.  ],\n",
       "       [  2.06,  51.  ],\n",
       "       [  7.94,  29.  ],\n",
       "       [  6.96,  20.  ],\n",
       "       [  8.34,  89.  ],\n",
       "       [  8.5 ,  76.  ],\n",
       "       [  6.91,  82.  ],\n",
       "       [  7.26,  76.  ],\n",
       "       [  8.11,  27.  ],\n",
       "       [  8.94,  15.  ],\n",
       "       [  4.71,  80.  ],\n",
       "       [  8.08,  22.  ],\n",
       "       [  7.76,  78.  ],\n",
       "       [  1.05,  52.  ],\n",
       "       [  8.58,  75.  ],\n",
       "       [  7.83,  74.  ],\n",
       "       [  7.85,  75.  ],\n",
       "       [  2.28,  39.  ],\n",
       "       [  2.56,  43.  ],\n",
       "       [  2.35,  57.  ],\n",
       "       [  2.22,  59.  ],\n",
       "       [  4.29,  91.  ],\n",
       "       [  9.5 , 100.  ],\n",
       "       [  7.81,  19.  ],\n",
       "       [  8.33,  80.  ],\n",
       "       [  8.07,  25.  ],\n",
       "       [  8.06,  38.  ],\n",
       "       [  7.61,  79.  ],\n",
       "       [  3.24,  77.  ],\n",
       "       [  2.33,  30.  ],\n",
       "       [  8.97,  14.  ],\n",
       "       [  8.89,  79.  ],\n",
       "       [  1.83,  52.  ],\n",
       "       [  2.13,  68.  ],\n",
       "       [  8.03,  37.  ],\n",
       "       [  5.8 ,  78.  ],\n",
       "       [ 10.  ,  86.  ],\n",
       "       [  2.41,  24.  ],\n",
       "       [  6.21,  56.  ],\n",
       "       [  7.76,  84.  ],\n",
       "       [  5.22,  87.  ],\n",
       "       [  6.65,  13.  ],\n",
       "       [  2.46,  30.  ]])"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = df.iloc[:, :].values\n",
    "\n",
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.rcParams['font.family'] = 'Malgun Gothic'\n",
    "plt.rcParams['font.size'] = 10\n",
    "plt.rcParams['axes.unicode_minus'] = False"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(X[:,0],X[:,1], color='hotpink')\n",
    "plt.xlabel('공부시간')\n",
    "plt.ylabel('점수')\n",
    "#plt.xlim(0,100)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n",
    "sc=StandardScaler()\n",
    "X=sc.fit_transform(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "100"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X\n",
    "\n",
    "len(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(X[:,0],X[:,1], color='hotpink')\n",
    "plt.xlabel('공부시간')\n",
    "plt.ylabel('점수')\n",
    "#plt.xlim(0,100)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.cluster import KMeans\n",
    "center_list=[]\n",
    "\n",
    "for i in range(1,11):\n",
    "    kmeans=KMeans(n_clusters=i, init='k-means++',random_state=0,n_init=10)\n",
    "    kmeans.fit(X)\n",
    "    center_list.append(kmeans.inertia_)\n",
    "\n",
    "plt.plot(range(1,11), center_list,color='hotpink')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 3, 3, 0, 0, 1, 1, 0, 2, 0, 0, 3, 1, 3, 3, 0, 1, 2, 3, 0, 1, 0,\n",
       "       3, 1, 2, 2, 3, 3, 3, 3, 1, 1, 3, 0, 2, 2, 3, 0, 0, 0, 3, 1, 2, 3,\n",
       "       3, 2, 1, 0, 1, 1, 2, 0, 1, 1, 0, 0, 0, 0, 3, 1, 1, 2, 2, 2, 2, 1,\n",
       "       1, 0, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 0, 2, 1, 2, 1, 1, 2, 0, 3, 1,\n",
       "       2, 3, 0, 1, 0, 2, 3, 2, 2, 0, 1, 3])"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "K=4 #4개의 그룹\n",
    "kmeans=KMeans(n_clusters=K,random_state=0,n_init=10)\n",
    "group=kmeans.fit_predict(X) #y축\n",
    "group"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "centers=kmeans.cluster_centers_\n",
    "centers\n",
    "\n",
    "\n",
    "for cluster in range(4):\n",
    "    plt.scatter(X[group==cluster,0],X[group==cluster,1],s=100,ec='black')\n",
    "    plt.scatter(centers[cluster,0],centers[cluster,1],s=300,ec='black', color='mistyrose' ,marker='d')\n",
    "    plt.text(centers[cluster,0],centers[cluster,1],cluster,va='center',ha='center')\n",
    "plt.xlabel('시간')\n",
    "plt.ylabel('점수')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "X_org=sc.inverse_transform(X)\n",
    "centers_org=sc.inverse_transform(centers)\n",
    "centers=kmeans.cluster_centers_\n",
    "centers\n",
    "\n",
    "\n",
    "for cluster in range(4):\n",
    "    plt.scatter(X_org[group==cluster,0],X_org[group==cluster,1],s=100,ec='black')\n",
    "    plt.scatter(centers_org[cluster,0],centers_org[cluster,1],s=300,ec='black', color='mistyrose' ,marker='d')\n",
    "    plt.text(centers_org[cluster,0],centers_org[cluster,1],cluster,va='center',ha='center')\n",
    "plt.xlabel('시간')\n",
    "plt.ylabel('점수')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8707088403321211"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_org=sc.inverse_transform(X)\n",
    "centers_org=sc.inverse_transform(centers)\n",
    "centers=kmeans.cluster_centers_\n",
    "centers\n",
    "\n",
    "\n",
    "for cluster in range(4):\n",
    "    plt.scatter(X_org[group==cluster,0],X_org[group==cluster,1],s=100,ec='black')\n",
    "    plt.scatter(centers_org[cluster,0],centers_org[cluster,1],s=300,ec='black', color='mistyrose' ,marker='d')\n",
    "    plt.text(centers_org[cluster,0],centers_org[cluster,1],cluster,va='center',ha='center')\n",
    "plt.xlabel('시간')\n",
    "plt.ylabel('점수')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import PolynomialFeatures\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "X=df.iloc [:, :-1].values\n",
    "y=df.iloc [:, -1].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-4 {color: black;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "reg=LinearRegression()\n",
    "reg.fit(X,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x250 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5),dpi=50).set_facecolor('mistyrose')\n",
    "plt.scatter(X,y,color='red').set_facecolor('mistyrose')\n",
    "plt.plot(X,reg.predict(X),color='blue')\n",
    "plt.grid()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "pred=reg.predict([[300]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8715517873200844"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reg.score(X,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [],
   "source": [
    "X=df.iloc [:, :-1].values\n",
    "y=df.iloc [:, -1].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import PolynomialFeatures"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [],
   "source": [
    "poly=PolynomialFeatures(degree=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1.00000e+00, 1.18000e+02, 1.39240e+04],\n",
       "       [1.00000e+00, 2.53000e+02, 6.40090e+04],\n",
       "       [1.00000e+00, 3.20000e+02, 1.02400e+05],\n",
       "       [1.00000e+00, 9.40000e+01, 8.83600e+03],\n",
       "       [1.00000e+00, 1.55000e+02, 2.40250e+04],\n",
       "       [1.00000e+00, 1.88000e+02, 3.53440e+04],\n",
       "       [1.00000e+00, 2.01000e+02, 4.04010e+04],\n",
       "       [1.00000e+00, 3.38000e+02, 1.14244e+05],\n",
       "       [1.00000e+00, 1.86000e+02, 3.45960e+04],\n",
       "       [1.00000e+00, 1.83000e+02, 3.34890e+04],\n",
       "       [1.00000e+00, 2.23000e+02, 4.97290e+04],\n",
       "       [1.00000e+00, 3.92000e+02, 1.53664e+05],\n",
       "       [1.00000e+00, 8.60000e+01, 7.39600e+03],\n",
       "       [1.00000e+00, 1.12000e+02, 1.25440e+04],\n",
       "       [1.00000e+00, 1.29000e+02, 1.66410e+04],\n",
       "       [1.00000e+00, 2.23000e+02, 4.97290e+04],\n",
       "       [1.00000e+00, 2.88000e+02, 8.29440e+04],\n",
       "       [1.00000e+00, 2.62000e+02, 6.86440e+04],\n",
       "       [1.00000e+00, 1.43000e+02, 2.04490e+04],\n",
       "       [1.00000e+00, 1.79000e+02, 3.20410e+04]])"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_poly=poly.fit_transform(X)\n",
    "X_poly"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-8 {color: black;}#sk-container-id-8 pre{padding: 0;}#sk-container-id-8 div.sk-toggleable {background-color: white;}#sk-container-id-8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-8 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-8 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-8 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-8 div.sk-item {position: relative;z-index: 1;}#sk-container-id-8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-8 div.sk-item::before, #sk-container-id-8 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-8 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-8 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-8 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-8 div.sk-label-container {text-align: center;}#sk-container-id-8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-8 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-8\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" checked><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reg=LinearRegression()\n",
    "reg.fit(X_poly,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\KOSMO\\AppData\\Local\\Temp\\ipykernel_9256\\2160175341.py:2: DeprecationWarning: Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)\n",
      "  X_arange=np.arange(min(X),max(X),0.1)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(3060, 1)"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "X_arange=np.arange(min(X),max(X),0.1)\n",
    "X_arange=X_arange.reshape(-1,1)\n",
    "X_arange.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x250 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5),dpi=50).set_facecolor('mistyrose')\n",
    "plt.scatter(X,y,color='red').set_facecolor('mistyrose')\n",
    "plt.plot(X_arange,reg.predict(poly.fit_transform(X_arange)),color='blue')\n",
    "plt.grid()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1.00000e+00, 1.18000e+02, 1.39240e+04],\n",
       "       [1.00000e+00, 2.53000e+02, 6.40090e+04],\n",
       "       [1.00000e+00, 3.20000e+02, 1.02400e+05],\n",
       "       [1.00000e+00, 9.40000e+01, 8.83600e+03],\n",
       "       [1.00000e+00, 1.55000e+02, 2.40250e+04],\n",
       "       [1.00000e+00, 1.88000e+02, 3.53440e+04],\n",
       "       [1.00000e+00, 2.01000e+02, 4.04010e+04],\n",
       "       [1.00000e+00, 3.38000e+02, 1.14244e+05],\n",
       "       [1.00000e+00, 1.86000e+02, 3.45960e+04],\n",
       "       [1.00000e+00, 1.83000e+02, 3.34890e+04],\n",
       "       [1.00000e+00, 2.23000e+02, 4.97290e+04],\n",
       "       [1.00000e+00, 3.92000e+02, 1.53664e+05],\n",
       "       [1.00000e+00, 8.60000e+01, 7.39600e+03],\n",
       "       [1.00000e+00, 1.12000e+02, 1.25440e+04],\n",
       "       [1.00000e+00, 1.29000e+02, 1.66410e+04],\n",
       "       [1.00000e+00, 2.23000e+02, 4.97290e+04],\n",
       "       [1.00000e+00, 2.88000e+02, 8.29440e+04],\n",
       "       [1.00000e+00, 2.62000e+02, 6.86440e+04],\n",
       "       [1.00000e+00, 1.43000e+02, 2.04490e+04],\n",
       "       [1.00000e+00, 1.79000e+02, 3.20410e+04]])"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_poly=poly.fit_transform(X)\n",
    "X_poly"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-7 {color: black;}#sk-container-id-7 pre{padding: 0;}#sk-container-id-7 div.sk-toggleable {background-color: white;}#sk-container-id-7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-7 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-7 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-7 div.sk-item {position: relative;z-index: 1;}#sk-container-id-7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-7 div.sk-item::before, #sk-container-id-7 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-7 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-7 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-7 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-7 div.sk-label-container {text-align: center;}#sk-container-id-7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-7 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-7\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" checked><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reg=LinearRegression()\n",
    "reg.fit(X_poly,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(X_test, Y_test, color='plum')\n",
    "plt.plot(X_train, reg.predict(X_train), color='dimgray')\n",
    "plt.title('Wedding reception(test)')\n",
    "plt.xlabel('total')\n",
    "plt.ylabel('reception')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([10.49161294])"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reg.coef_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6115562905169369"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reg.intercept_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9356663661221668"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reg.score(X_train, Y_train )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9727616474310156"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reg.score(X_test, Y_test )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import SGDRegressor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-6 {color: black;}#sk-container-id-6 pre{padding: 0;}#sk-container-id-6 div.sk-toggleable {background-color: white;}#sk-container-id-6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-6 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-6 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-6 div.sk-item {position: relative;z-index: 1;}#sk-container-id-6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-6 div.sk-item::before, #sk-container-id-6 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-6 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-6 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-6 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-6 div.sk-label-container {text-align: center;}#sk-container-id-6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-6 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-6\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SGDRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" checked><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SGDRegressor</label><div class=\"sk-toggleable__content\"><pre>SGDRegressor()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "SGDRegressor()"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sr=SGDRegressor()\n",
    "sr.fit(X_train,Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\KOSMO\\AppData\\Roaming\\Python\\Python311\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 51216 (\\N{HANGUL SYLLABLE JEOM}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\KOSMO\\AppData\\Roaming\\Python\\Python311\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 49688 (\\N{HANGUL SYLLABLE SU}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\KOSMO\\AppData\\Roaming\\Python\\Python311\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 50640 (\\N{HANGUL SYLLABLE E}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\KOSMO\\AppData\\Roaming\\Python\\Python311\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 46384 (\\N{HANGUL SYLLABLE DDA}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\KOSMO\\AppData\\Roaming\\Python\\Python311\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 47480 (\\N{HANGUL SYLLABLE REUN}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x250 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "y_pred=sr.predict(X_train)\n",
    "plt.figure(figsize=(10,5),dpi=50)\n",
    "plt.scatter(X_train,Y_train, color='tomato')\n",
    "plt.plot(X_train,y_pred, color='SpringGreen')\n",
    "plt.title('점수에 따른')\n",
    "plt.xlabel('hour')\n",
    "plt.ylabel('score')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9355282235258788"
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sr.score(X_train, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-- Epoch 1\n",
      "Norm: 2.40, NNZs: 1, Bias: 0.442470, T: 16, Avg. loss: 1181.034371\n",
      "Total training time: 0.00 seconds.\n",
      "-- Epoch 2\n",
      "Norm: 3.84, NNZs: 1, Bias: 0.697455, T: 32, Avg. loss: 754.011321\n",
      "Total training time: 0.00 seconds.\n",
      "-- Epoch 3\n",
      "Norm: 4.89, NNZs: 1, Bias: 0.881472, T: 48, Avg. loss: 520.842928\n",
      "Total training time: 0.00 seconds.\n",
      "-- Epoch 4\n",
      "Norm: 5.70, NNZs: 1, Bias: 1.023556, T: 64, Avg. loss: 374.527388\n",
      "Total training time: 0.00 seconds.\n",
      "-- Epoch 5\n",
      "Norm: 6.34, NNZs: 1, Bias: 1.137258, T: 80, Avg. loss: 277.717040\n",
      "Total training time: 0.00 seconds.\n",
      "-- Epoch 6\n",
      "Norm: 6.88, NNZs: 1, Bias: 1.230635, T: 96, Avg. loss: 210.603548\n",
      "Total training time: 0.00 seconds.\n",
      "-- Epoch 7\n",
      "Norm: 7.32, NNZs: 1, Bias: 1.308149, T: 112, Avg. loss: 162.433366\n",
      "Total training time: 0.00 seconds.\n",
      "-- Epoch 8\n",
      "Norm: 7.69, NNZs: 1, Bias: 1.372847, T: 128, Avg. loss: 127.468199\n",
      "Total training time: 0.00 seconds.\n",
      "-- Epoch 9\n",
      "Norm: 8.01, NNZs: 1, Bias: 1.427757, T: 144, Avg. loss: 101.814505\n",
      "Total training time: 0.00 seconds.\n",
      "-- Epoch 10\n",
      "Norm: 8.28, NNZs: 1, Bias: 1.474953, T: 160, Avg. loss: 82.674196\n",
      "Total training time: 0.00 seconds.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\KOSMO\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\linear_model\\_stochastic_gradient.py:1561: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-10 {color: black;}#sk-container-id-10 pre{padding: 0;}#sk-container-id-10 div.sk-toggleable {background-color: white;}#sk-container-id-10 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-10 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-10 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-10 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-10 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-10 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-10 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-10 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-10 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-10 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-10 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-10 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-10 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-10 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-10 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-10 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-10 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-10 div.sk-item {position: relative;z-index: 1;}#sk-container-id-10 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-10 div.sk-item::before, #sk-container-id-10 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-10 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-10 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-10 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-10 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-10 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-10 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-10 div.sk-label-container {text-align: center;}#sk-container-id-10 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-10 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-10\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SGDRegressor(eta0=0.001, max_iter=10, random_state=0, verbose=1)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" checked><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SGDRegressor</label><div class=\"sk-toggleable__content\"><pre>SGDRegressor(eta0=0.001, max_iter=10, random_state=0, verbose=1)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "SGDRegressor(eta0=0.001, max_iter=10, random_state=0, verbose=1)"
      ]
     },
     "execution_count": 147,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sr=SGDRegressor(max_iter=10, eta0=0.001,random_state=0, verbose=1)\n",
    "sr.fit(X_train,Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\KOSMO\\AppData\\Roaming\\Python\\Python311\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 51216 (\\N{HANGUL SYLLABLE JEOM}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\KOSMO\\AppData\\Roaming\\Python\\Python311\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 49688 (\\N{HANGUL SYLLABLE SU}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\KOSMO\\AppData\\Roaming\\Python\\Python311\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 50640 (\\N{HANGUL SYLLABLE E}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\KOSMO\\AppData\\Roaming\\Python\\Python311\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 46384 (\\N{HANGUL SYLLABLE DDA}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\KOSMO\\AppData\\Roaming\\Python\\Python311\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 47480 (\\N{HANGUL SYLLABLE REUN}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x250 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "y_pred=sr.predict(X_train)\n",
    "plt.figure(figsize=(10,5),dpi=50)\n",
    "plt.scatter(X_train,Y_train, color='deeppink')\n",
    "plt.plot(X_train,y_pred, color='LightSkyBlue')\n",
    "plt.title('점수에 따른')\n",
    "plt.xlabel('hour')\n",
    "plt.ylabel('score')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-- Epoch 1\n",
      "Norm: 3.82, NNZs: 1, Bias: -0.319487, T: 16, Avg. loss: 287.195969\n",
      "Total training time: 0.00 seconds.\n",
      "-- Epoch 2\n",
      "Norm: 11.67, NNZs: 1, Bias: 2.614027, T: 32, Avg. loss: 262.564845\n",
      "Total training time: 0.00 seconds.\n",
      "-- Epoch 3\n",
      "Norm: 9.49, NNZs: 1, Bias: 2.151193, T: 48, Avg. loss: 43.532198\n",
      "Total training time: 0.00 seconds.\n",
      "-- Epoch 4\n",
      "Norm: 11.25, NNZs: 1, Bias: 2.284789, T: 64, Avg. loss: 53.050632\n",
      "Total training time: 0.00 seconds.\n",
      "-- Epoch 5\n",
      "Norm: 7.21, NNZs: 1, Bias: 1.279887, T: 80, Avg. loss: 24.909674\n",
      "Total training time: 0.00 seconds.\n",
      "-- Epoch 6\n",
      "Norm: 9.19, NNZs: 1, Bias: 1.727566, T: 96, Avg. loss: 67.235037\n",
      "Total training time: 0.00 seconds.\n",
      "-- Epoch 7\n",
      "Norm: 9.69, NNZs: 1, Bias: 1.502931, T: 112, Avg. loss: 34.674161\n",
      "Total training time: 0.00 seconds.\n",
      "-- Epoch 8\n",
      "Norm: 10.37, NNZs: 1, Bias: 1.776610, T: 128, Avg. loss: 43.208869\n",
      "Total training time: 0.00 seconds.\n",
      "-- Epoch 9\n",
      "Norm: 7.86, NNZs: 1, Bias: 1.057781, T: 144, Avg. loss: 18.645455\n",
      "Total training time: 0.00 seconds.\n",
      "-- Epoch 10\n",
      "Norm: 10.81, NNZs: 1, Bias: 1.875779, T: 160, Avg. loss: 45.233955\n",
      "Total training time: 0.00 seconds.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\KOSMO\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\linear_model\\_stochastic_gradient.py:1561: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-12 {color: black;}#sk-container-id-12 pre{padding: 0;}#sk-container-id-12 div.sk-toggleable {background-color: white;}#sk-container-id-12 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-12 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-12 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-12 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-12 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-12 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-12 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-12 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-12 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-12 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-12 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-12 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-12 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-12 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-12 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-12 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-12 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-12 div.sk-item {position: relative;z-index: 1;}#sk-container-id-12 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-12 div.sk-item::before, #sk-container-id-12 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-12 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-12 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-12 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-12 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-12 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-12 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-12 div.sk-label-container {text-align: center;}#sk-container-id-12 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-12 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-12\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SGDRegressor(eta0=0.1, max_iter=10, random_state=0, verbose=1)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-12\" type=\"checkbox\" checked><label for=\"sk-estimator-id-12\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SGDRegressor</label><div class=\"sk-toggleable__content\"><pre>SGDRegressor(eta0=0.1, max_iter=10, random_state=0, verbose=1)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "SGDRegressor(eta0=0.1, max_iter=10, random_state=0, verbose=1)"
      ]
     },
     "execution_count": 156,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sr=SGDRegressor(max_iter=10, eta0=0.1,random_state=0, verbose=1)\n",
    "sr.fit(X_train,Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\KOSMO\\AppData\\Roaming\\Python\\Python311\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 51216 (\\N{HANGUL SYLLABLE JEOM}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\KOSMO\\AppData\\Roaming\\Python\\Python311\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 49688 (\\N{HANGUL SYLLABLE SU}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\KOSMO\\AppData\\Roaming\\Python\\Python311\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 50640 (\\N{HANGUL SYLLABLE E}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\KOSMO\\AppData\\Roaming\\Python\\Python311\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 46384 (\\N{HANGUL SYLLABLE DDA}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\KOSMO\\AppData\\Roaming\\Python\\Python311\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 47480 (\\N{HANGUL SYLLABLE REUN}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x250 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "y_pred=sr.predict(X_train)\n",
    "plt.figure(figsize=(10,5),dpi=50)\n",
    "plt.scatter(X_train,Y_train, color='deeppink')\n",
    "plt.plot(X_train,y_pred, color='LightSkyBlue')\n",
    "plt.title('점수에 따른')\n",
    "plt.xlabel('hour')\n",
    "plt.ylabel('score')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9198414401049736"
      ]
     },
     "execution_count": 158,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sr.score(X_train, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([95.03607273])"
      ]
     },
     "execution_count": 160,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reg.predict([[9]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "dataset = pd.read_csv('./data/MultipleLinearRegressionData.csv')\n",
    "X = dataset.iloc[:, :-1].values\n",
    "y = dataset.iloc[:, -1].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "dataset = pd.read_csv('./data/PolynomialRegressionData.csv')\n",
    "X = dataset.iloc[:, :-1].values\n",
    "y = dataset.iloc[:, -1].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([[0.2],\n",
       "        [0.5],\n",
       "        [0.8],\n",
       "        [0.9],\n",
       "        [1.2],\n",
       "        [2.4],\n",
       "        [2.5],\n",
       "        [2.6],\n",
       "        [2.9],\n",
       "        [3.1],\n",
       "        [3.2],\n",
       "        [3.3],\n",
       "        [3.7],\n",
       "        [3.9],\n",
       "        [4. ],\n",
       "        [4.1],\n",
       "        [4.2],\n",
       "        [4.4],\n",
       "        [4.7],\n",
       "        [4.8]]),\n",
       " array([  2,   4,   6,   4,   6,  14,  10,  12,  24,  26,  32,  46,  44,\n",
       "         52,  58,  54,  68,  80,  84, 100], dtype=int64))"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X,y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-9 {color: black;}#sk-container-id-9 pre{padding: 0;}#sk-container-id-9 div.sk-toggleable {background-color: white;}#sk-container-id-9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-9 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-9 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-9 div.sk-item {position: relative;z-index: 1;}#sk-container-id-9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-9 div.sk-item::before, #sk-container-id-9 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-9 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-9 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-9 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-9 div.sk-label-container {text-align: center;}#sk-container-id-9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-9 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-9\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" checked><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "reg=LinearRegression()\n",
    "reg.fit(X,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x250 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5),dpi=50).set_facecolor('mistyrose')\n",
    "plt.scatter(X,y,color='red').set_facecolor('mistyrose')\n",
    "plt.plot(X,reg.predict(X),color='black') \n",
    "plt.title('Score by hours(genius)')\n",
    "plt.xlabel('hours')\n",
    "plt.ylabel('score')\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8169296513411765"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reg.score(X,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import PolynomialFeatures\n",
    "poly_reg=PolynomialFeatures(degree=10)\n",
    "X_poly=poly_reg.fit_transform(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1.00000000e+00, 2.00000000e-01, 4.00000000e-02, 8.00000000e-03,\n",
       "        1.60000000e-03, 3.20000000e-04, 6.40000000e-05, 1.28000000e-05,\n",
       "        2.56000000e-06, 5.12000000e-07, 1.02400000e-07],\n",
       "       [1.00000000e+00, 5.00000000e-01, 2.50000000e-01, 1.25000000e-01,\n",
       "        6.25000000e-02, 3.12500000e-02, 1.56250000e-02, 7.81250000e-03,\n",
       "        3.90625000e-03, 1.95312500e-03, 9.76562500e-04],\n",
       "       [1.00000000e+00, 8.00000000e-01, 6.40000000e-01, 5.12000000e-01,\n",
       "        4.09600000e-01, 3.27680000e-01, 2.62144000e-01, 2.09715200e-01,\n",
       "        1.67772160e-01, 1.34217728e-01, 1.07374182e-01],\n",
       "       [1.00000000e+00, 9.00000000e-01, 8.10000000e-01, 7.29000000e-01,\n",
       "        6.56100000e-01, 5.90490000e-01, 5.31441000e-01, 4.78296900e-01,\n",
       "        4.30467210e-01, 3.87420489e-01, 3.48678440e-01],\n",
       "       [1.00000000e+00, 1.20000000e+00, 1.44000000e+00, 1.72800000e+00,\n",
       "        2.07360000e+00, 2.48832000e+00, 2.98598400e+00, 3.58318080e+00,\n",
       "        4.29981696e+00, 5.15978035e+00, 6.19173642e+00]])"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_poly[:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.2],\n",
       "       [0.5],\n",
       "       [0.8],\n",
       "       [0.9],\n",
       "       [1.2]])"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X[:5]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [],
   "source": [
    "reg=LinearRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-10 {color: black;}#sk-container-id-10 pre{padding: 0;}#sk-container-id-10 div.sk-toggleable {background-color: white;}#sk-container-id-10 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-10 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-10 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-10 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-10 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-10 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-10 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-10 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-10 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-10 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-10 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-10 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-10 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-10 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-10 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-10 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-10 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-10 div.sk-item {position: relative;z-index: 1;}#sk-container-id-10 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-10 div.sk-item::before, #sk-container-id-10 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-10 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-10 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-10 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-10 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-10 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-10 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-10 div.sk-label-container {text-align: center;}#sk-container-id-10 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-10 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-10\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" checked><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reg.fit(X_poly,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x250 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5),dpi=50).set_facecolor('mistyrose')\n",
    "plt.scatter(X,y,color='red')\n",
    "plt.plot(X,reg.predict(X_poly),color='black') \n",
    "plt.title('Score by hours(genius)')\n",
    "plt.xlabel('hours')\n",
    "plt.ylabel('score')\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9911027482512124"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reg.score(X_poly,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\KOSMO\\AppData\\Local\\Temp\\ipykernel_6340\\2891218795.py:2: DeprecationWarning: Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)\n",
      "  X_range=np.arange(min(X),max(X),0.1)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. , 1.1, 1.2, 1.3, 1.4,\n",
       "       1.5, 1.6, 1.7, 1.8, 1.9, 2. , 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7,\n",
       "       2.8, 2.9, 3. , 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4. ,\n",
       "       4.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.7])"
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "X_range=np.arange(min(X),max(X),0.1)\n",
    "X_range"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_range=X_range.reshape(-1,1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x250 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "X_poly=poly_reg.fit_transform(X_range)\n",
    "plt.figure(figsize=(10,5),dpi=50).set_facecolor('mistyrose')\n",
    "plt.scatter(X,y,color='red').set_facecolor('mistyrose')\n",
    "plt.plot(X_range,reg.predict(X_poly), color='black') \n",
    "plt.title('Score by hours(genius)')\n",
    "plt.xlabel('hours')\n",
    "plt.ylabel('score')\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([29.89734729])"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reg.predict(poly_reg.fit_transform([[2]]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\KOSMO\\AppData\\Local\\Temp\\ipykernel_6340\\2530741396.py:25: DeprecationWarning: Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)\n",
      "  X_range=np.arange(min(X),max(X),0.1)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x250 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#파일 임포트 \n",
    "\n",
    "import pandas as pd\n",
    "dataset = pd.read_csv('./data/PolynomialRegressionData.csv')\n",
    "X = dataset.iloc[:, :-1].values\n",
    "y = dataset.iloc[:, -1].values\n",
    "\n",
    "\n",
    "\n",
    "from sklearn.linear_model import LinearRegression\n",
    "reg=LinearRegression()\n",
    "reg.fit(X,y)\n",
    "\n",
    "#독립변수를 다항으로 \n",
    "from sklearn.preprocessing import PolynomialFeatures\n",
    "poly_reg=PolynomialFeatures(degree=2)\n",
    "X_poly=poly_reg.fit_transform(X)\n",
    "\n",
    "#선행객체 만들어 학습 \n",
    "reg=LinearRegression()\n",
    "reg.fit(X_poly,y)\n",
    "\n",
    "#X범위를 0.1단위로 생성 \n",
    "import numpy as np\n",
    "X_range=np.arange(min(X),max(X),0.1)\n",
    "X_range=X_range.reshape(-1, 1)\n",
    "X_range\n",
    "\n",
    "\n",
    "#그래프 출력 \n",
    "plt.figure(figsize=(10,5),dpi=50).set_facecolor('mistyrose')\n",
    "plt.scatter(X,y,color='red').set_facecolor('mistyrose')\n",
    "plt.plot(X_range,reg.predict(poly_reg.fit_transform(X_range)), color='black') \n",
    "plt.title('Score by hours(genius)')\n",
    "plt.xlabel('hours')\n",
    "plt.ylabel('score')\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
